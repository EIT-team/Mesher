function Mesh=readCGAL(filename)
% THis function reads the mesh from generated by Mesher out.mesh file

% INPUTS: filename is the full name to your .mesh file

% OUTPUTS: Mesh is a structure of following:
% -Mesh.N_nodes - integer, number of nodes(or vertices as you wish to call them so)

% -Mesh.nodes - X,Y,Z coordinate of nodes (Mesh.nodes(:,1:3)) and their
% reference to the material (Mesh.nodes(:,4))

% -Mesh.N_triangles - integer, number of surface triangles

% -Mesh.triangles - triangles with respect to nodes(Mesh.triangles(:,1:3))
% and their material reference (Mesh.triangles(:,4))

% -Mesh_Ntetra - integer, number of tetrahedra in the mesh

% -Mesh.tetra - Tetrahedral elements with respect to nodes
% (Mesh.tetra(:,1:4)), and their material reference (Mesh.tetra(:,5))

file=fopen(filename,'r');
for i=1:3
hdr=fgets(file)
end
Mesh.N_nodes=fscanf(file,'%d\n',1);

for i=1:Mesh.N_nodes
    for j=1:4
       Mesh.nodes(i,j)=fscanf(file,'%f',1);
    end
end

hdr=fgets(file)
hdr=fgets(file)

Mesh.N_triangles=fscanf(file,'%d\n',1);
for i=1:Mesh.N_triangles
    for j=1:4
       Mesh.triangles(i,j)=fscanf(file,'%d',1);
    end
end

hdr=fgets(file)
hdr=fgets(file)

Mesh.N_tetra=fscanf(file,'%d\n',1);
for i=1:Mesh.N_tetra
    for j=1:5
       Mesh.tetra(i,j)=fscanf(file,'%d',1);
    end
end

fclose(file);